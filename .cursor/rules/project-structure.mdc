---
alwaysApply: true
description: Main project structure and architecture guidelines for Fincheck Web
---

# Fincheck Web - Project Structure

This is a React project built with Vite, TypeScript, and TailwindCSS. Package manager: PNPM.

## Technology Stack

- **Frontend**: React 19.1.0 with TypeScript
- **Build Tool**: Vite with SWC plugin
- **Styling**: TailwindCSS with custom theme
- **State Management**: React Query (@tanstack/react-query)
- **Forms**: React Hook Form with Zod validation
- **Routing**: React Router DOM
- **HTTP Client**: Axios
- **Package Manager**: PNPM

## File Organization

The main entry point is [main.tsx](mdc:src/main.tsx), which renders [App.tsx](mdc:src/App.tsx) and sets up routing via [Router/index.tsx](mdc:src/Router/index.tsx).

```
src/
├── app/                    # Core application logic
│   ├── config/            # Constants and configuration
│   ├── contexts/          # React contexts
│   ├── hooks/             # Custom hooks
│   └── services/          # API services
├── ui/                    # User interface
│   ├── components/        # Reusable components
│   ├── layouts/           # Layout components
│   └── pages/             # Page components
└── utils/                 # Utility functions
```

## Key Configuration Files

- [vite.config.ts](mdc:vite.config.ts) - Vite configuration with path aliases
- [tailwind.config.js](mdc:tailwind.config.js) - Custom TailwindCSS theme
- [tsconfig.json](mdc:tsconfig.json) - TypeScript configuration
- [package.json](mdc:package.json) - Dependencies and scripts

## Language Standards

- **Code**: All code, comments, and commit messages in English
- **Commits**: Follow Conventional Commits (e.g., "feat: add modal component")
- **Communication**: Respond to users in Portuguese
